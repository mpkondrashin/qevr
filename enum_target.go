// Code generated by enum (github.com/mpkondrashin/enum) using following command:
// enum -type=Target -names=File,SMS
// DO NOT EDIT!

package main

import (
    "encoding/json"
    "errors"
    "fmt"
    "strconv"
    "strings"
)

type Target int

const (
    TargetFile Target = iota
    TargetSMS  Target = iota
)



// MapTargetToString - map Target to string
var MapTargetToString = map[Target]string {
    TargetFile: "File",
    TargetSMS:  "SMS",
}

// String - return string representation for Target value
func (v Target)String() string {
    s, ok := MapTargetToString[v]
    if ok {
        return s
    }
    return "Target(" + strconv.FormatInt(int64(v), 10) + ")"
}

// ErrUnknownTarget - will be returned wrapped when parsing string
// containing unrecognized value.
var ErrUnknownTarget = errors.New("unknown Target")

 // MapTargetFromString - map string to Target value
var MapTargetFromString = map[string]Target{
    "file":    TargetFile,
    "sms":    TargetSMS,
}

// UnmarshalJSON implements the Unmarshaler interface of the json package for Target.
func (s *Target) UnmarshalJSON(data []byte) error {
    var v string
    if err := json.Unmarshal(data, &v); err != nil {
        return err
    }
    result, ok := MapTargetFromString[strings.ToLower(v)]
    if !ok {
        return fmt.Errorf("%w: %s", ErrUnknownTarget, v)
    }
    *s = result
    return nil
}

// MarshalJSON implements the Marshaler interface of the json package for Target.
func (s Target) MarshalJSON() ([]byte, error) {
    return []byte(fmt.Sprintf("\"%v\"", s)), nil
}

// UnmarshalYAML implements the Unmarshaler interface of the yaml.v3 package for Target.
func (s *Target) UnmarshalYAML(unmarshal func(interface{}) error) error {
    var v string
    if err := unmarshal(&v); err != nil {
        return err
    }
    result, ok := MapTargetFromString[strings.ToLower(v)]  
    if !ok {
        return fmt.Errorf("%w: %s", ErrUnknownTarget, v)
    }
    *s = result
    return nil
}


// MarshalYAML implements the Marshaler interface of the yaml.v3 package for Target.
func (s Target) MarshalYAML() (interface{}, error) {
    return s.String(), nil
}
